<application>
  <component name="VimSettings">
    <state version="4" enabled="true" />
    <globalmarks />
    <filemarks>
      <file name="/fragment.js" timestamp="1533120156286">
        <mark key="[" line="0" column="0" />
      </file>
      <file name="$USER_HOME$/src/pccfront/src/Pcc/Bundle/WebBundle/Resources/public/raw/js/article/detail/article_detail.js" timestamp="1533725211422">
        <mark key="[" line="26" column="74" />
        <mark key="]" line="26" column="82" />
        <mark key="." line="26" column="82" />
        <mark key="^" line="26" column="82" />
      </file>
      <file name="/a.dummy" timestamp="1520707565354">
        <mark key="[" line="0" column="0" />
      </file>
      <file name="/clientes_modelo_347_copy [@192.168.50.144]" timestamp="1533725948542">
        <mark key="[" line="0" column="0" />
      </file>
      <file name="/compras_reservas [@192.168.50.144]" timestamp="1533725951473">
        <mark key="[" line="0" column="0" />
      </file>
      <file name="/usuarios [@192.168.50.144]" timestamp="1533105295329">
        <mark key="[" line="0" column="0" />
      </file>
      <file name="/lexik_trans_unit [@192.168.50.144]" timestamp="1533543584717">
        <mark key="[" line="0" column="0" />
      </file>
      <file name="$USER_HOME$/src/pccfront/src/Pcc/Bundle/WebBundle/Resources/public/raw/js/base/PCC.ViewComponent.js" timestamp="1533640663698">
        <mark key="[" line="8" column="0" />
        <mark key="]" line="8" column="3" />
        <mark key="^" line="8" column="3" />
        <mark key="." line="8" column="3" />
      </file>
      <file name="/JQuery-CSS Fragment (article_detail.js:1073).css" timestamp="1533720401677">
        <mark key="[" line="0" column="0" />
      </file>
      <file name="/PHP Console" timestamp="1533122152873">
        <mark key="[" line="0" column="0" />
      </file>
      <file name="/abonos [@192.168.50.144]" timestamp="1533105295087">
        <mark key="[" line="0" column="0" />
      </file>
      <file name="$APPLICATION_CONFIG_DIR$/consoles/db/edd91e55-d704-4927-884f-2201a2404e72/console.sql" timestamp="1533726116241">
        <mark key="[" line="0" column="0" />
      </file>
      <file name="/JavaScript Console" timestamp="1533076512431">
        <mark key="[" line="0" column="0" />
      </file>
      <file name="$USER_HOME$/src/pccfront/src/Pcc/Bundle/WebBundle/Controller/ArticlesController.php" timestamp="1533718088671">
        <mark key="'" line="263" column="12" />
        <mark key="[" line="1328" column="61" />
        <mark key="]" line="1328" column="61" />
        <mark key="." line="1328" column="61" />
        <mark key="^" line="1328" column="61" />
      </file>
      <file name="/tpv_log [@192.168.50.144]" timestamp="1533105295415">
        <mark key="[" line="0" column="0" />
      </file>
      <file name="$USER_HOME$/src/pccfront/src/Pcc/Bundle/WebBundle/Resources/public/raw/js/common/tokywoky.js" timestamp="1533764838394">
        <mark key="'" line="83" column="7" />
        <mark key="[" line="508" column="3" />
        <mark key="]" line="509" column="18" />
        <mark key="." line="509" column="18" />
        <mark key="^" line="509" column="18" />
      </file>
      <file name="/api_shopping_line_service [@192.168.50.144]" timestamp="1533725952389">
        <mark key="[" line="0" column="0" />
      </file>
      <file name="/dummy.sql" timestamp="1533726364346">
        <mark key="[" line="0" column="0" />
      </file>
      <file name="/Dummy.txt" timestamp="1533763113976">
        <mark key="[" line="0" column="9" />
        <mark key="]" line="0" column="9" />
        <mark key="." line="0" column="9" />
      </file>
      <file name="$USER_HOME$/src/pccfront/src/Pcc/Bundle/WebBundle/Resources/views/article/detail/image/article-images.html.twig" timestamp="1533715700776">
        <mark key="[" line="76" column="36" />
        <mark key="]" line="76" column="37" />
        <mark key="." line="76" column="37" />
      </file>
      <file name="$USER_HOME$/src/pccfront/src/Pcc/Bundle/WebBundle/Model/ServicesKiller/ServicesKillerManager.php" timestamp="1533717661556">
        <mark key="[" line="19" column="52" />
        <mark key="]" line="19" column="51" />
        <mark key="^" line="19" column="51" />
        <mark key="." line="19" column="51" />
      </file>
      <file name="$APPLICATION_CONFIG_DIR$/consoles/.datagrid/cell" timestamp="1533726098369">
        <mark key="[" line="0" column="0" />
      </file>
      <file name="$USER_HOME$/src/pccfront/src/Pcc/Bundle/WebBundle/Resources/views/mk-tools/tokywoky-transaction.html.twig" timestamp="1533725675282" />
      <file name="$USER_HOME$/src/pccfront/web/bundles/pccweb/raw/js/article/detail/article_detail.js" timestamp="1533724405413">
        <mark key="[" line="28" column="0" />
        <mark key="]" line="28" column="0" />
        <mark key="^" line="25" column="22" />
        <mark key="." line="28" column="0" />
      </file>
      <file name="$USER_HOME$/src/pccfront/src/Pcc/Bundle/WebBundle/Resources/views/base/footjs.html.twig" timestamp="1533651491009">
        <mark key="[" line="8" column="32" />
        <mark key="]" line="8" column="40" />
        <mark key="." line="8" column="40" />
        <mark key="^" line="8" column="40" />
      </file>
      <file name="$USER_HOME$/src/pccfront/package.json" timestamp="1533711927864">
        <mark key="[" line="46" column="0" />
        <mark key="]" line="46" column="0" />
        <mark key="." line="46" column="0" />
      </file>
      <file name="$USER_HOME$/src/pccfront/src/Pcc/Bundle/WebBundle/Resources/public/raw/js/common/pcc.NotificationCookies.js" timestamp="1533627518742">
        <mark key="[" line="4" column="0" />
        <mark key="]" line="4" column="0" />
        <mark key="^" line="8" column="62" />
        <mark key="." line="4" column="0" />
      </file>
      <file name="$USER_HOME$/src/pccfront/src/Pcc/Bundle/WebBundle/Resources/public/raw/js/base/PCC.Component.js" timestamp="1533650241977">
        <mark key="[" line="23" column="7" />
        <mark key="]" line="24" column="21" />
        <mark key="." line="24" column="21" />
        <mark key="^" line="24" column="21" />
      </file>
      <file name="/api_third_party_services_status [@192.168.50.144]" timestamp="1533726006923">
        <mark key="[" line="0" column="0" />
      </file>
      <file name="$USER_HOME$/src/pccfront/src/Pcc/Bundle/WebBundle/Resources/public/raw/js/base/pcc.Component.js" timestamp="1533658415965">
        <mark key="[" line="34" column="0" />
        <mark key="]" line="34" column="0" />
        <mark key="^" line="29" column="16" />
        <mark key="." line="34" column="0" />
      </file>
      <file name="$USER_HOME$/src/pccfront/src/Pcc/Bundle/WebBundle/Resources/config/routing_ajax_nc.yml" timestamp="1533716058149" />
      <file name="/fragment.java" timestamp="1520728318026">
        <mark key="[" line="0" column="0" />
      </file>
    </filemarks>
    <jumps>
      <jump line="28" column="0" filename="$USER_HOME$/IdeaProjects/pruebecilla/src/zapalevi/view/miView.java" />
      <jump line="23" column="30" filename="$USER_HOME$/IdeaProjects/pruebecilla/src/zapalevi/event/pinchaPulsado.java" />
      <jump line="96" column="0" filename="$USER_HOME$/IdeaProjects/pruebecilla/src/zapalevi/event/pinchaPulsado.java" />
      <jump line="121" column="0" filename="$USER_HOME$/src/pccfront/src/Pcc/Bundle/WebBundle/Controller/ArticlesController.php" />
      <jump line="309" column="8" filename="$USER_HOME$/src/pccfront/src/Pcc/Bundle/WebBundle/Controller/ArticlesController.php" />
      <jump line="88" column="0" filename="$USER_HOME$/src/pccfront/src/Pcc/Bundle/WebBundle/Controller/ArticlesController.php" />
      <jump line="108" column="8" filename="$USER_HOME$/src/pccfront/src/Pcc/Bundle/WebBundle/Controller/ArticlesController.php" />
      <jump line="109" column="21" filename="$USER_HOME$/src/pccfront/src/Pcc/Bundle/WebBundle/Controller/ArticlesController.php" />
      <jump line="110" column="19" filename="$USER_HOME$/src/pccfront/src/Pcc/Bundle/WebBundle/Controller/ArticlesController.php" />
      <jump line="112" column="57" filename="$USER_HOME$/src/pccfront/src/Pcc/Bundle/WebBundle/Controller/ArticlesController.php" />
      <jump line="116" column="32" filename="$USER_HOME$/src/pccfront/src/Pcc/Bundle/WebBundle/Controller/ArticlesController.php" />
      <jump line="268" column="12" filename="$USER_HOME$/src/pccfront/src/Pcc/Bundle/WebBundle/Controller/ArticlesController.php" />
      <jump line="247" column="0" filename="$USER_HOME$/src/pccfront/src/Pcc/Bundle/WebBundle/Resources/public/raw/js/common/pcc.core.js" />
      <jump line="111" column="0" filename="$USER_HOME$/src/pccfront/src/Pcc/Bundle/WebBundle/Resources/views/article/detail/datasheet/article-buy-buttons-drop-ship.html.twig" />
      <jump line="9" column="8" filename="$USER_HOME$/src/pccfront/src/Pcc/Bundle/WebBundle/Resources/views/article/detail/article-detail-drop-shipping.html.twig" />
      <jump line="40" column="0" filename="$USER_HOME$/src/pccfront/src/Pcc/Bundle/WebBundle/Resources/views/article/detail/article-detail-drop-shipping.html.twig" />
      <jump line="15" column="35" filename="$USER_HOME$/src/pccfront/src/Pcc/Bundle/WebBundle/Resources/public/raw/js/gaApi/gaApi.js" />
      <jump line="0" column="0" filename="$USER_HOME$/src/pccfront/src/Pcc/Bundle/WebBundle/Resources/public/raw/js/gaApi/gaApi.js" />
      <jump line="376" column="0" filename="$USER_HOME$/src/pccfront/src/Pcc/Bundle/WebBundle/Resources/public/raw/js/gaApi/gaApi.js" />
      <jump line="438" column="26" filename="$USER_HOME$/src/pccfront/src/Pcc/Bundle/WebBundle/Resources/public/raw/js/common/tokywoky.js" />
      <jump line="423" column="11" filename="$USER_HOME$/src/pccfront/src/Pcc/Bundle/WebBundle/Resources/public/raw/js/common/tokywoky.js" />
      <jump line="281" column="5" filename="$USER_HOME$/src/pccfront/src/Pcc/Bundle/WebBundle/Resources/public/raw/js/common/tokywoky.js" />
      <jump line="424" column="4" filename="$USER_HOME$/src/pccfront/src/Pcc/Bundle/WebBundle/Resources/public/raw/js/common/tokywoky.js" />
      <jump line="426" column="0" filename="$USER_HOME$/src/pccfront/src/Pcc/Bundle/WebBundle/Resources/public/raw/js/common/tokywoky.js" />
      <jump line="21" column="3" filename="$USER_HOME$/src/pccfront/src/Pcc/Bundle/WebBundle/Resources/public/raw/js/common/tokywoky.js" />
      <jump line="83" column="7" filename="$USER_HOME$/src/pccfront/src/Pcc/Bundle/WebBundle/Resources/public/raw/js/common/tokywoky.js" />
    </jumps>
    <registers>
      <register name="&quot;" type="4">
        <text encoding="base64">IA==</text>
      </register>
      <register name="-" type="4">
        <text encoding="base64">IA==</text>
      </register>
      <register name="/" type="4">
        <text>white</text>
      </register>
      <register name="0" type="4">
        <text>\&quot;pccomponentes.com\&quot;]</text>
      </register>
      <register name="1" type="2">
        <text encoding="base64">ICAgIC8vIGxvYWRUb2t5V29reVNjcmlwdCgpOwo=</text>
      </register>
      <register name="2" type="2">
        <text encoding="base64">ICAgICAgICBmYWtlVG9reVdva3koKTsK</text>
      </register>
      <register name="3" type="2">
        <text encoding="base64">Cg==</text>
      </register>
      <register name="4" type="2">
        <text encoding="base64"></text>
      </register>
      <register name="5" type="4">
        <text encoding="base64"></text>
      </register>
      <register name="6" type="2">
        <text encoding="base64">ICAgICAgICAvLyB0b2t5LnNyYyA9IHNyY0Zha2U7Cg==</text>
      </register>
      <register name="7" type="2">
        <text encoding="base64"></text>
      </register>
      <register name="8" type="2">
        <text encoding="base64">ICAgICAgICAgICAgICogdG9kbzogYm9ycmFyIGVzdGUgY29tZW50YXJpbyB5IGxhIG5pYXBhIHNpIGphbcOhcyBzZSB2YSBhIGRlc2Fycm9sbGFyIG5hZGEgbcOhcyBjb24gdG9reXdva3kgeEQK</text>
      </register>
      <register name="9" type="2">
        <text encoding="base64">ICAgICAgICAgICAgICogCg==</text>
      </register>
    </registers>
    <search>
      <last-search>white</last-search>
      <last-offset />
      <last-pattern>white</last-pattern>
      <last-dir>1</last-dir>
      <show-last>false</show-last>
    </search>
    <history>
      <history-search>
        <entry>gaine</entry>
        <entry>$user</entry>
        <entry>white</entry>
      </history-search>
      <history-cmd />
      <history-expr />
      <history-input />
    </history>
    <shortcut-conflicts>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed R</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed N</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed P</text>
      </shortcut-conflict>
    </shortcut-conflicts>
  </component>
</application>