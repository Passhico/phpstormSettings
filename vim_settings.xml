<application>
  <component name="VimSettings">
    <state version="4" enabled="true" />
    <globalmarks />
    <filemarks>
      <file name="$APPLICATION_CONFIG_DIR$/scratches/rest-api.http" timestamp="1535636945588">
        <mark key="[" line="3" column="0" />
        <mark key="]" line="3" column="0" />
        <mark key="." line="3" column="0" />
      </file>
      <file name="$USER_HOME$/src/pccfront/src/Pcc/Bundle/WebBundle/Resources/views/statics/landing/black-friday-2018/black/abierto/bomba-cubierta.html.twig" timestamp="1542646328223">
        <mark key="[" line="0" column="0" />
        <mark key="]" line="0" column="0" />
        <mark key="." line="0" column="0" />
      </file>
      <file name="$USER_HOME$/src/pccfront/src/Pcc/Bundle/WebBundle/Resources/public/raw/js/common/pcc.Browser.js" timestamp="1542638079735">
        <mark key="'" line="143" column="18" />
        <mark key="[" line="163" column="30" />
        <mark key="]" line="159" column="0" />
        <mark key="." line="159" column="0" />
        <mark key="^" line="160" column="28" />
      </file>
      <file name="$USER_HOME$/src/pccfront/src/Pcc/Bundle/WebBundle/Resources/views/article/detail/datasheet/article-buy-buttons.html.twig" timestamp="1535712114008">
        <mark key="[" line="23" column="0" />
        <mark key="]" line="23" column="0" />
        <mark key="." line="23" column="0" />
      </file>
      <file name="$USER_HOME$/src/pccfront/src/Pcc/Bundle/WebBundle/Controller/Cms/CmsCategoriesController.php" timestamp="1536587388428">
        <mark key="[" line="34" column="31" />
        <mark key="]" line="34" column="35" />
        <mark key="." line="34" column="35" />
        <mark key="^" line="34" column="35" />
      </file>
      <file name="$USER_HOME$/src/pccfront/src/Pcc/Bundle/WebBundle/Resources/views/statics/landing/black-friday-2018/DFPS_SCRIPTS_18.html.twig" timestamp="1542116445335" />
      <file name="$USER_HOME$/src/pccfront/src/Pcc/Bundle/WebBundle/Resources/views/statics/landing/black-friday-2018/preblack/bomba-cubierta.html.twig" timestamp="1542645087820">
        <mark key="[" line="0" column="0" />
        <mark key="]" line="0" column="0" />
        <mark key="." line="0" column="0" />
      </file>
      <file name="$USER_HOME$/src/pccfront/web/app_dev.php" timestamp="1542039473525">
        <mark key="[" line="26" column="39" />
        <mark key="]" line="4" column="35" />
        <mark key="." line="4" column="35" />
        <mark key="^" line="4" column="35" />
      </file>
      <file name="$USER_HOME$/src/pccfront/src/Pcc/Bundle/WebBundle/Resources/views/statics/landing/black-friday-2018/preblack/pre-black.html.twig" timestamp="1542637313987">
        <mark key="[" line="51" column="18" />
        <mark key="]" line="52" column="10" />
        <mark key="^" line="52" column="10" />
        <mark key="." line="52" column="10" />
      </file>
      <file name="/Dummy.txt" timestamp="1542643932755">
        <mark key="[" line="0" column="0" />
        <mark key="]" line="0" column="8" />
        <mark key="." line="0" column="8" />
      </file>
      <file name="$USER_HOME$/src/pccfront/app/config/parameters.yml" timestamp="1542115909557">
        <mark key="[" line="42" column="25" />
        <mark key="]" line="42" column="23" />
        <mark key="." line="42" column="23" />
        <mark key="^" line="51" column="31" />
      </file>
      <file name="$USER_HOME$/src/pccfront/src/Pcc/Bundle/WebBundle/Resources/public/raw/js/promotions/black-friday-18/index.js" timestamp="1542647006340">
        <mark key="[" line="158" column="0" />
        <mark key="]" line="158" column="0" />
        <mark key="." line="158" column="0" />
        <mark key="^" line="157" column="87" />
      </file>
      <file name="$USER_HOME$/src/pccfront/bin/gjslint/gjslint.conf" timestamp="1535635384252">
        <mark key="[" line="0" column="0" />
        <mark key="]" line="0" column="0" />
        <mark key="." line="0" column="0" />
      </file>
      <file name="$USER_HOME$/src/pccfront/src/Pcc/Bundle/WebBundle/Resources/views/statics/landing/black-friday-2018/banner.html.twig" timestamp="1542115188544">
        <mark key="." line="25" column="5" />
      </file>
      <file name="$USER_HOME$/src/pccfront/src/Pcc/Bundle/WebBundle/Resources/views/statics/landing/black-friday-2018/black/abierto/index.html.twig" timestamp="1542646830320">
        <mark key="[" line="22" column="0" />
        <mark key="]" line="22" column="0" />
        <mark key="." line="22" column="0" />
        <mark key="^" line="6" column="17" />
      </file>
      <file name="$USER_HOME$/src/pccfront/src/Pcc/Bundle/WebBundle/Controller/StargateController.php" timestamp="1536584755208">
        <mark key="[" line="70" column="0" />
        <mark key="]" line="70" column="0" />
        <mark key="." line="70" column="0" />
      </file>
      <file name="$USER_HOME$/src/pccfront/src/Pcc/Bundle/WebBundle/Resources/views/Shopping/Order/order-detail.html.twig" timestamp="1542645168170">
        <mark key="[" line="146" column="0" />
        <mark key="]" line="146" column="71" />
      </file>
      <file name="$USER_HOME$/src/pccfront/src/Pcc/Bundle/WebBundle/Resources/views/statics/landing/black-friday-2018/black/black.html.twig" timestamp="1542651299309">
        <mark key="[" line="39" column="53" />
        <mark key="]" line="40" column="0" />
        <mark key="^" line="39" column="0" />
        <mark key="." line="40" column="0" />
      </file>
      <file name="$USER_HOME$/src/pccfront/src/Pcc/Bundle/WebBundle/Controller/Statics/BlackFriday2018/BlackFriday2018Controller.php" timestamp="1542639209443">
        <mark key="[" line="4" column="0" />
        <mark key="]" line="4" column="0" />
        <mark key="." line="4" column="0" />
        <mark key="^" line="175" column="48" />
      </file>
      <file name="$USER_HOME$/src/pccfront/src/Pcc/Bundle/WebBundle/Resources/views/statics/landing/black-friday-2018/preblack/carousel.html.twig" timestamp="1542639879823">
        <mark key="[" line="4" column="46" />
        <mark key="]" line="4" column="50" />
        <mark key="." line="4" column="50" />
        <mark key="^" line="4" column="50" />
      </file>
      <file name="$USER_HOME$/src/pccfront/src/Pcc/Bundle/WebBundle/Resources/views/statics/landing/black-friday-2018/black/abierto/carousel.html.twig" timestamp="1542643930276">
        <mark key="[" line="18" column="0" />
        <mark key="]" line="18" column="0" />
        <mark key="." line="18" column="0" />
        <mark key="^" line="18" column="37" />
      </file>
      <file name="$USER_HOME$/src/pccfront/src/Pcc/Bundle/WebBundle/Resources/public/raw/js/Cms/Categories/pcc.Cms.Categories.js" timestamp="1536746563978">
        <mark key="[" line="104" column="0" />
        <mark key="]" line="104" column="0" />
        <mark key="." line="104" column="0" />
        <mark key="^" line="104" column="40" />
      </file>
      <file name="$USER_HOME$/src/pccfront/src/Pcc/Bundle/WebBundle/Resources/views/googleTagManager/DFP.html.twig" timestamp="1543217562116">
        <mark key="[" line="0" column="0" />
        <mark key="]" line="0" column="0" />
        <mark key="." line="0" column="0" />
      </file>
      <file name="$USER_HOME$/src/pccfront/src/Pcc/Bundle/WebBundle/Resources/public/js/common/pcc-fdfba27ae1.Browser.js" timestamp="1542696396132">
        <mark key="[" line="54" column="0" />
        <mark key="]" line="54" column="0" />
        <mark key="." line="54" column="0" />
      </file>
    </filemarks>
    <jumps>
      <jump line="28" column="0" filename="$USER_HOME$/IdeaProjects/pruebecilla/src/zapalevi/view/miView.java" />
      <jump line="23" column="30" filename="$USER_HOME$/IdeaProjects/pruebecilla/src/zapalevi/event/pinchaPulsado.java" />
      <jump line="96" column="0" filename="$USER_HOME$/IdeaProjects/pruebecilla/src/zapalevi/event/pinchaPulsado.java" />
      <jump line="121" column="0" filename="$USER_HOME$/src/pccfront/src/Pcc/Bundle/WebBundle/Controller/ArticlesController.php" />
      <jump line="309" column="8" filename="$USER_HOME$/src/pccfront/src/Pcc/Bundle/WebBundle/Controller/ArticlesController.php" />
      <jump line="88" column="0" filename="$USER_HOME$/src/pccfront/src/Pcc/Bundle/WebBundle/Controller/ArticlesController.php" />
      <jump line="108" column="8" filename="$USER_HOME$/src/pccfront/src/Pcc/Bundle/WebBundle/Controller/ArticlesController.php" />
      <jump line="109" column="21" filename="$USER_HOME$/src/pccfront/src/Pcc/Bundle/WebBundle/Controller/ArticlesController.php" />
      <jump line="110" column="19" filename="$USER_HOME$/src/pccfront/src/Pcc/Bundle/WebBundle/Controller/ArticlesController.php" />
      <jump line="112" column="57" filename="$USER_HOME$/src/pccfront/src/Pcc/Bundle/WebBundle/Controller/ArticlesController.php" />
      <jump line="116" column="32" filename="$USER_HOME$/src/pccfront/src/Pcc/Bundle/WebBundle/Controller/ArticlesController.php" />
      <jump line="268" column="12" filename="$USER_HOME$/src/pccfront/src/Pcc/Bundle/WebBundle/Controller/ArticlesController.php" />
      <jump line="247" column="0" filename="$USER_HOME$/src/pccfront/src/Pcc/Bundle/WebBundle/Resources/public/raw/js/common/pcc.core.js" />
      <jump line="111" column="0" filename="$USER_HOME$/src/pccfront/src/Pcc/Bundle/WebBundle/Resources/views/article/detail/datasheet/article-buy-buttons-drop-ship.html.twig" />
      <jump line="9" column="8" filename="$USER_HOME$/src/pccfront/src/Pcc/Bundle/WebBundle/Resources/views/article/detail/article-detail-drop-shipping.html.twig" />
      <jump line="40" column="0" filename="$USER_HOME$/src/pccfront/src/Pcc/Bundle/WebBundle/Resources/views/article/detail/article-detail-drop-shipping.html.twig" />
      <jump line="15" column="35" filename="$USER_HOME$/src/pccfront/src/Pcc/Bundle/WebBundle/Resources/public/raw/js/gaApi/gaApi.js" />
      <jump line="438" column="26" filename="$USER_HOME$/src/pccfront/src/Pcc/Bundle/WebBundle/Resources/public/raw/js/common/tokywoky.js" />
      <jump line="423" column="11" filename="$USER_HOME$/src/pccfront/src/Pcc/Bundle/WebBundle/Resources/public/raw/js/common/tokywoky.js" />
      <jump line="281" column="5" filename="$USER_HOME$/src/pccfront/src/Pcc/Bundle/WebBundle/Resources/public/raw/js/common/tokywoky.js" />
      <jump line="424" column="4" filename="$USER_HOME$/src/pccfront/src/Pcc/Bundle/WebBundle/Resources/public/raw/js/common/tokywoky.js" />
      <jump line="426" column="0" filename="$USER_HOME$/src/pccfront/src/Pcc/Bundle/WebBundle/Resources/public/raw/js/common/tokywoky.js" />
      <jump line="21" column="3" filename="$USER_HOME$/src/pccfront/src/Pcc/Bundle/WebBundle/Resources/public/raw/js/common/tokywoky.js" />
      <jump line="83" column="7" filename="$USER_HOME$/src/pccfront/src/Pcc/Bundle/WebBundle/Resources/public/raw/js/common/tokywoky.js" />
      <jump line="39" column="15" filename="$USER_HOME$/src/pccfront/src/Pcc/Bundle/WebBundle/Resources/public/raw/js/common/tokywoky.js" />
      <jump line="135" column="25" filename="$USER_HOME$/src/pccfront/src/Pcc/Bundle/WebBundle/Resources/public/raw/js/common/tokywoky.js" />
      <jump line="539" column="0" filename="$USER_HOME$/src/pccfront/src/Pcc/Bundle/WebBundle/Controller/UserController.php" />
      <jump line="350" column="0" filename="$USER_HOME$/src/pccfront/src/Pcc/Bundle/WebBundle/Controller/UserController.php" />
      <jump line="281" column="12" filename="$USER_HOME$/src/pccfront/src/Pcc/Bundle/WebBundle/Controller/UserPanelController.php" />
      <jump line="50" column="53" filename="$USER_HOME$/src/pccfront/src/Pcc/Bundle/WebBundle/Controller/UserPanelController.php" />
      <jump line="292" column="0" filename="$USER_HOME$/src/pccfront/src/Pcc/Bundle/WebBundle/Controller/UserPanelController.php" />
      <jump line="1116" column="44" filename="$USER_HOME$/src/pccfront/src/Pcc/Bundle/WebBundle/Controller/UserPanelController.php" />
      <jump line="216" column="0" filename="$USER_HOME$/src/pccfront/.eslintrc.js" />
      <jump line="170" column="13" filename="$USER_HOME$/src/pccfront/.eslintrc.json" />
      <jump line="190" column="12" filename="$USER_HOME$/src/pccfront/.eslintrc.json" />
      <jump line="28" column="8" filename="$USER_HOME$/src/pccfront/src/Pcc/Bundle/WebBundle/Resources/public/raw/js/article/detail/article_detail.js" />
      <jump line="166" column="13" filename="$USER_HOME$/src/pccfront/.eslintrc.json" />
      <jump line="0" column="0" filename="$USER_HOME$/src/pccfront/.eslintrc.json" />
      <jump line="258" column="0" filename="$USER_HOME$/src/pccfront/.eslintrc.json" />
      <jump line="243" column="33" filename="$USER_HOME$/src/pccfront/.eslintrc.json" />
      <jump line="1508" column="0" filename="$USER_HOME$/src/pccfront/src/Pcc/Bundle/WebBundle/Resources/public/raw/js/article/detail/article_detail.js" />
      <jump line="102" column="0" filename="$USER_HOME$/src/frontst/src/App.js" />
      <jump line="327" column="0" filename="$USER_HOME$/src/frontst/node_modules/react/cjs/react.development.js" />
      <jump line="19" column="51" filename="$USER_HOME$/src/frontst/src/paramita.svg" />
      <jump line="0" column="0" filename="$USER_HOME$/src/frontst/src/paramita.svg" />
      <jump line="2249" column="0" filename="$USER_HOME$/src/frontst/src/paramita.svg" />
      <jump line="22" column="0" filename="$USER_HOME$/src/frontst/src/App.js" />
      <jump line="565" column="0" filename="$USER_HOME$/src/pccfront/src/Pcc/Bundle/WebBundle/Resources/public/raw/js/article/detail/article_detail.js" />
      <jump line="29" column="65" filename="$USER_HOME$/src/pccfront/src/Pcc/Bundle/WebBundle/Resources/public/raw/js/base/pcc.Component.js" />
      <jump line="38" column="8" filename="$USER_HOME$/src/pccfront/src/Pcc/Bundle/WebBundle/Resources/public/raw/js/base/pcc.Component.js" />
      <jump line="790" column="35" filename="$USER_HOME$/src/pccfront/src/Pcc/Bundle/WebBundle/Mappings/Shopping/Cart/CartArticle.php" />
      <jump line="55" column="23" filename="$USER_HOME$/src/pccfront/src/Pcc/Bundle/WebBundle/Mappings/Shopping/Cart/CartArticle.php" />
      <jump line="0" column="0" filename="$USER_HOME$/src/pccfront/src/Pcc/Bundle/WebBundle/Mappings/Shopping/Cart/CartArticle.php" />
      <jump line="793" column="0" filename="$USER_HOME$/src/pccfront/src/Pcc/Bundle/WebBundle/Mappings/Shopping/Cart/CartArticle.php" />
      <jump line="751" column="36" filename="$USER_HOME$/src/pccfront/src/Pcc/Bundle/WebBundle/Controller/Article/SuperFamiliesArticlesController.php" />
      <jump line="2468" column="0" filename="$USER_HOME$/src/pccfront/src/Pcc/Bundle/WebBundle/Controller/Article/SuperFamiliesArticlesController.php" />
      <jump line="505" column="6" filename="$USER_HOME$/src/pccfront/src/Pcc/Bundle/WebBundle/Mappings/Article/ArticleDetail.php" />
      <jump line="139" column="38" filename="$USER_HOME$/src/pccfront/src/Pcc/Bundle/WebBundle/Mappings/Article/ArticleDetail.php" />
      <jump line="57" column="4" filename="$USER_HOME$/src/pccfront/src/Pcc/Bundle/WebBundle/Mappings/Article/Detail/SuperFamily/SuperFamily.php" />
      <jump line="0" column="0" filename="$USER_HOME$/src/pccfront/src/Pcc/Bundle/WebBundle/Mappings/Article/ArticleDetail.php" />
      <jump line="518" column="4" filename="$USER_HOME$/src/pccfront/src/Pcc/Bundle/WebBundle/Resources/public/raw/js/common/tokywoky.js" />
      <jump line="587" column="3" filename="$USER_HOME$/src/pccfront/src/Pcc/Bundle/WebBundle/Resources/public/raw/js/common/tokywoky.js" />
      <jump line="528" column="9" filename="$USER_HOME$/src/pccfront/src/Pcc/Bundle/WebBundle/Resources/public/raw/js/common/tokywoky.js" />
      <jump line="112" column="0" filename="$USER_HOME$/src/pccfront/src/Pcc/Bundle/WebBundle/Resources/public/raw/js/common/tokywoky.js" />
      <jump line="16" column="4" filename="$USER_HOME$/src/pccfront/src/Pcc/Bundle/WebBundle/Resources/public/raw/js/common/tokywoky.js" />
      <jump line="652" column="0" filename="$USER_HOME$/src/pccfront/src/Pcc/Bundle/WebBundle/Resources/public/raw/js/common/tokywoky.js" />
      <jump line="522" column="4" filename="$USER_HOME$/src/pccfront/src/Pcc/Bundle/WebBundle/Resources/public/raw/js/common/tokywoky.js" />
      <jump line="523" column="0" filename="$USER_HOME$/src/pccfront/src/Pcc/Bundle/WebBundle/Resources/public/raw/js/common/tokywoky.js" />
      <jump line="525" column="3" filename="$USER_HOME$/src/pccfront/src/Pcc/Bundle/WebBundle/Resources/public/raw/js/common/tokywoky.js" />
      <jump line="411" column="38" filename="$USER_HOME$/src/pccfront/src/Pcc/Bundle/WebBundle/Resources/public/raw/js/common/tokywoky.js" />
      <jump line="76" column="0" filename="$USER_HOME$/src/pccfront/src/Pcc/Bundle/WebBundle/Resources/views/base/footjs.html.twig" />
      <jump line="23" column="4" filename="$USER_HOME$/src/pccfront/src/Pcc/Bundle/WebBundle/Resources/public/test/gaApi/gaApi.node.test.js" />
      <jump line="13" column="4" filename="$USER_HOME$/src/pccfront/src/Pcc/Bundle/WebBundle/Resources/public/test/gaApi/gaApi.node.test.js" />
      <jump line="633" column="0" filename="$USER_HOME$/src/pccfront/src/Pcc/Bundle/WebBundle/Resources/public/test/gaApi/gaApi.node.test.js" />
      <jump line="352" column="8" filename="$USER_HOME$/src/pccfront/src/Pcc/Bundle/WebBundle/Resources/public/raw/js/gaApi/gaApi.js" />
      <jump line="374" column="0" filename="$USER_HOME$/src/pccfront/src/Pcc/Bundle/WebBundle/Resources/public/raw/js/gaApi/gaApi.js" />
      <jump line="0" column="0" filename="$USER_HOME$/src/pccfront/src/Pcc/Bundle/WebBundle/Resources/public/raw/js/gaApi/gaApi.js" />
      <jump line="376" column="0" filename="$USER_HOME$/src/pccfront/src/Pcc/Bundle/WebBundle/Resources/public/raw/js/gaApi/gaApi.js" />
      <jump line="0" column="0" filename="$USER_HOME$/src/pccfront/src/Pcc/Bundle/WebBundle/Controller/Cart/CartController.php" />
      <jump line="68" column="0" filename="$USER_HOME$/src/pccfront/src/Pcc/Bundle/WebBundle/Resources/public/raw/js/base/pcc.Component.js" />
      <jump line="16" column="66" filename="$USER_HOME$/src/pccfront/src/Pcc/Bundle/WebBundle/Resources/public/raw/js/base/pcc.Component.spec.js" />
      <jump line="43" column="11" filename="$USER_HOME$/src/pccfront/src/Pcc/Bundle/WebBundle/Resources/public/raw/js/base/pcc.Component.spec.js" />
      <jump line="72" column="36" filename="$USER_HOME$/src/pccfront/src/Pcc/Bundle/WebBundle/Controller/StargateController.php" />
      <jump line="61" column="26" filename="$USER_HOME$/src/pccfront/src/Pcc/Bundle/WebBundle/Resources/public/raw/js/common/tokywoky.js" />
      <jump line="1549" column="20" filename="$USER_HOME$/src/pccfront/web/bundles/pccweb/raw/js/article/detail/article_detail.js" />
      <jump line="815" column="33" filename="$USER_HOME$/src/pccfront/src/Pcc/Bundle/WebBundle/Controller/UserController.php" />
      <jump line="16070" column="0" filename="$USER_HOME$/src/pccfront/src/Pcc/Bundle/WebBundle/Controller/UserController.php" />
      <jump line="15570" column="99" filename="$USER_HOME$/src/pccfront/src/Pcc/Bundle/WebBundle/Controller/UserController.php" />
      <jump line="837" column="69" filename="$USER_HOME$/src/pccfront/src/Pcc/Bundle/WebBundle/Controller/UserController.php" />
      <jump line="33" column="15" filename="$USER_HOME$/Downloads/PostalCodeSpain_List_2004october.txt" />
      <jump line="0" column="0" filename="$USER_HOME$/Downloads/PostalCodeSpain_List_2004october.txt" />
      <jump line="57133" column="0" filename="$USER_HOME$/Downloads/PostalCodeSpain_List_2004october.txt" />
      <jump line="56906" column="21" filename="$USER_HOME$/Downloads/PostalCodeSpain_List_2004october.txt" />
      <jump line="864" column="31" filename="$USER_HOME$/src/pccfront/src/Pcc/Bundle/WebBundle/Controller/UserController.php" />
      <jump line="436" column="70" filename="$USER_HOME$/src/pccfront/src/Pcc/Bundle/WebBundle/Resources/views/user/panel/orders/modals/return-modal.html.twig" />
      <jump line="37" column="41" filename="$USER_HOME$/src/pccfront/composer.json" />
      <jump line="142" column="18" filename="$USER_HOME$/src/pccfront/src/Pcc/Bundle/WebBundle/Resources/public/raw/js/common/pcc.Browser.js" />
    </jumps>
    <registers>
      <register name="&quot;" type="2">
        <text encoding="base64">Cg==</text>
      </register>
      <register name="-" type="4">
        <text encoding="base64">IA==</text>
      </register>
      <register name="/" type="4">
        <text>lexi</text>
      </register>
      <register name="0" type="2">
        <text encoding="base64">ICAgIHsjPHNjcmlwdCBzcmM9Imh0dHBzOi8vY2RuanMuY2xvdWRmbGFyZS5jb20vYWpheC9saWJzL093bENhcm91c2VsMi8yLjMuNC9vd2wuY2Fyb3VzZWwubWluLmpzIj48L3NjcmlwdD4jfQo=</text>
      </register>
      <register name="1" type="2">
        <text encoding="base64">Cg==</text>
      </register>
      <register name="2" type="4">
        <text encoding="base64"></text>
      </register>
      <register name="3" type="2">
        <text encoding="base64">ICAgIGh0dHA6Ly9jZG4ucGNjb21wb25lbnRlcy5jb20vanMvb3dsMi9vd2wuY2Fyb3VzZWwubWluLmpzCg==</text>
      </register>
      <register name="4" type="2">
        <text encoding="base64">ICAgIDxzY3JpcHQgc3JjPSJodHRwczovL2NkbmpzLmNsb3VkZmxhcmUuY29tL2FqYXgvbGlicy9Pd2xDYXJvdXNlbDIvMi4zLjQvb3dsLmNhcm91c2VsLm1pbi5qcyI+PC9zY3JpcHQ+Cg==</text>
      </register>
      <register name="5" type="2">
        <text encoding="base64">ICAgIDxzY3JpcHQgc3JjPSJodHRwczovL2NkbmpzLmNsb3VkZmxhcmUuY29tL2FqYXgvbGlicy9Pd2xDYXJvdXNlbDIvMi4zLjQvb3dsLmNhcm91c2VsLm1pbi5qcyI+PC9zY3JpcHQ+Cg==</text>
      </register>
      <register name="6" type="2">
        <text encoding="base64">ICAgICwK</text>
      </register>
      <register name="7" type="2">
        <text encoding="base64">Cg==</text>
      </register>
      <register name="8" type="2">
        <text encoding="base64">ICAgIAo=</text>
      </register>
      <register name="9" type="4">
        <text encoding="base64">CiAgICA8c2NyaXB0IHNyYz0ie3sgYXNzZXQoJ3ZlbmRvci90aW1lbWFjaGluZS5qcyd8anNfcmV2KSB9fSI+PC9zY3JpcHQ+CiAgICA8c2NyaXB0IHNyYz0ie3sgYXNzZXQoJ3Byb21vdGlvbnMvYmxhY2stZnJpZGF5LTE4L2luZGV4LmpzJ3xqc19yZXYpIH19Ij48L3NjcmlwdD4KICAgIDxzY3JpcHQgc3JjPSJodHRwczovL2NkbmpzLmNsb3VkZmxhcmUuY29tL2FqYXgvbGlicy9Pd2xDYXJvdXNlbDIvMi4zLjQvb3dsLmNhcm91c2VsLm1pbi5qcyIKICAgICAgICBvbmxvYWQ9IlBDQy5CRjE4LnNldHVwKCkiPjwvc2NyaXB0Pgo=</text>
      </register>
      <register name=":" type="4">
        <text>q</text>
      </register>
    </registers>
    <search>
      <last-search>lexi</last-search>
      <last-offset />
      <last-pattern>lexi</last-pattern>
      <last-dir>1</last-dir>
      <show-last>false</show-last>
    </search>
    <history>
      <history-search>
        <entry>gaine</entry>
        <entry>$user</entry>
        <entry>white</entry>
        <entry>erro</entry>
        <entry>sync</entry>
        <entry>lexi</entry>
      </history-search>
      <history-cmd>
        <entry>wq</entry>
        <entry>/erro</entry>
        <entry>!ls</entry>
        <entry>n</entry>
        <entry>w</entry>
        <entry>q</entry>
      </history-cmd>
      <history-expr />
      <history-input />
    </history>
    <shortcut-conflicts>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed R</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed N</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed P</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed 2</text>
      </shortcut-conflict>
    </shortcut-conflicts>
  </component>
</application>